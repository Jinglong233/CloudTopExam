<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jl.project.mapper.DepartmentMapper">
    <!--实体映射-->
    <resultMap id="base_result_map" type="com.jl.project.entity.po.Department">
        <!-- ID -->
        <id column="id" property="id"/>
        <!-- 上层部门code -->
        <result column="parent_code" property="parentCode"/>
        <!-- 部门编码 -->
        <result column="dept_code" property="deptCode"/>
        <!-- 部门层级 -->
        <result column="dept_level" property="deptLevel"/>
        <!-- 部门类型（预留） -->
        <result column="dept_type" property="deptType"/>
        <!-- 部门名称 -->
        <result column="dept_name" property="deptName"/>
        <!-- 创建时间 -->
        <result column="create_time" property="createTime"/>
        <!-- 创建者 -->
        <result column="create_by" property="createBy"/>
        <!-- 更新时间 -->
        <result column="update_time" property="updateTime"/>
        <!-- 更新者 -->
        <result column="update_by" property="updateBy"/>
        <!-- 备注 -->
        <result column="remark" property="remark"/>
        <!-- 排序 -->
        <result column="sort" property="sort"/>
    </resultMap>
    <!--通用查询列-->
    <sql id="base_column_list">
        id
        ,parent_code,dept_code,dept_level,dept_type,dept_name,create_time,create_by,update_time,update_by,remark,sort
    </sql>
    <!--基础查询条件-->
    <sql id="base_query_condition">
        <if test="query.id != null and query.id!= ''">
            and id = #{query.id}
        </if>
        <if test="query.parentCode != null and query.parentCode!= ''">
            and parent_code = #{query.parentCode}
        </if>
        <if test="query.deptCode != null and query.deptCode!= ''">
            and dept_code = #{query.deptCode}
        </if>
        <if test="query.deptLevel != null">
            and dept_level = #{query.deptLevel}
        </if>
        <if test="query.deptType != null and query.deptType!= ''">
            and dept_type = #{query.deptType}
        </if>
        <if test="query.deptName != null and query.deptName!= ''">
            and dept_name = #{query.deptName}
        </if>
        <if test="query.createTime != null">
            and create_time = #{query.createTime}
        </if>
        <if test="query.createBy != null and query.createBy!= ''">
            and create_by = #{query.createBy}
        </if>
        <if test="query.updateTime != null">
            and update_time = #{query.updateTime}
        </if>
        <if test="query.updateBy != null and query.updateBy!= ''">
            and update_by = #{query.updateBy}
        </if>
        <if test="query.remark != null and query.remark!= ''">
            and remark = #{query.remark}
        </if>
        <if test="query.sort != null">
            and sort = #{query.sort}
        </if>
    </sql>
    <!--扩展查询条件-->
    <sql id="base_query_condition_extend">
        <if test="query.idFuzzy != null and query.idFuzzy != '' ">
            and id like concat('%', #{query.idFuzzy}, '%')
        </if>
        <if test="query.parentCodeFuzzy != null and query.parentCodeFuzzy != '' ">
            and parent_code like concat('%', #{query.parentCodeFuzzy}, '%')
        </if>
        <if test="query.deptCodeFuzzy != null and query.deptCodeFuzzy != '' ">
            and dept_code like concat(#{query.deptCodeFuzzy}, '%')
        </if>
        <if test="query.deptTypeFuzzy != null and query.deptTypeFuzzy != '' ">
            and dept_type like concat('%', #{query.deptTypeFuzzy}, '%')
        </if>
        <if test="query.deptNameFuzzy != null and query.deptNameFuzzy != '' ">
            and dept_name like concat('%', #{query.deptNameFuzzy}, '%')
        </if>
        <if test="query.createTimeStart != null and query.createTimeStart != '' ">
            <![CDATA[ and create_time >= str_to_date(#{query.createTimeStart}, '%Y-%m-%d') ]]>
        </if>
        <if test="query.createTimeEnd != null and query.createTimeEnd != '' ">
            <![CDATA[ and create_time < data_sub(str_to_date(#{query.createTimeEnd}, '%Y-%m-%d'), interval -1 day) ]]>
        </if>
        <if test="query.createByFuzzy != null and query.createByFuzzy != '' ">
            and create_by like concat('%', #{query.createByFuzzy}, '%')
        </if>
        <if test="query.updateTimeStart != null and query.updateTimeStart != '' ">
            <![CDATA[ and update_time >= str_to_date(#{query.updateTimeStart}, '%Y-%m-%d') ]]>
        </if>
        <if test="query.updateTimeEnd != null and query.updateTimeEnd != '' ">
            <![CDATA[ and update_time < data_sub(str_to_date(#{query.updateTimeEnd}, '%Y-%m-%d'), interval -1 day) ]]>
        </if>
        <if test="query.updateByFuzzy != null and query.updateByFuzzy != '' ">
            and update_by like concat('%', #{query.updateByFuzzy}, '%')
        </if>
        <if test="query.remarkFuzzy != null and query.remarkFuzzy != '' ">
            and remark like concat('%', #{query.remarkFuzzy}, '%')
        </if>
    </sql>
    <!--通用查询条件-->
    <sql id="query_condition">
        <where>
            <include refid="base_query_condition"/>
            <include refid="base_query_condition_extend"/>
        </where>
    </sql>
    <!--查询列表-->
    <select id="selectList" resultMap="base_result_map">
        SELECT
        <include refid="base_column_list"/>
        FROM department
        <include refid="query_condition"/>
        <if test="query.orderBy!=null">
            order by ${query.OrderBy}
        </if>
        <if test="query.simplePage!=null">
            limit #{query.simplePage.start},#{query.simplePage.end}
        </if>
    </select>
    <!--查询数量-->
    <select id="selectCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM department
        <include refid="query_condition"/>
    </select>
    <!--插入（匹配有值的字段）-->
    <insert id="insert" parameterType="com.jl.project.entity.po.Department">

        INSERT INTO department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bean.id != null">
                id,
            </if>
            <if test="bean.parentCode != null">
                parent_code,
            </if>
            <if test="bean.deptCode != null">
                dept_code,
            </if>
            <if test="bean.deptLevel != null">
                dept_level,
            </if>
            <if test="bean.deptType != null">
                dept_type,
            </if>
            <if test="bean.deptName != null">
                dept_name,
            </if>
            <if test="bean.createTime != null">
                create_time,
            </if>
            <if test="bean.createBy != null">
                create_by,
            </if>
            <if test="bean.updateTime != null">
                update_time,
            </if>
            <if test="bean.updateBy != null">
                update_by,
            </if>
            <if test="bean.remark != null">
                remark,
            </if>
            <if test="bean.sort != null">
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bean.id != null">
                #{bean.id},
            </if>
            <if test="bean.parentCode != null">
                #{bean.parentCode},
            </if>
            <if test="bean.deptCode != null">
                #{bean.deptCode},
            </if>
            <if test="bean.deptLevel != null">
                #{bean.deptLevel},
            </if>
            <if test="bean.deptType != null">
                #{bean.deptType},
            </if>
            <if test="bean.deptName != null">
                #{bean.deptName},
            </if>
            <if test="bean.createTime != null">
                #{bean.createTime},
            </if>
            <if test="bean.createBy != null">
                #{bean.createBy},
            </if>
            <if test="bean.updateTime != null">
                #{bean.updateTime},
            </if>
            <if test="bean.updateBy != null">
                #{bean.updateBy},
            </if>
            <if test="bean.remark != null">
                #{bean.remark},
            </if>
            <if test="bean.sort != null">
                #{bean.sort},
            </if>
        </trim>
    </insert>

    <!--插入（匹配有值的字段）-->
    <insert id="insertOrUpdate" parameterType="com.jl.project.entity.po.Department">
        INSERT INTO department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bean.id != null">
                id,
            </if>
            <if test="bean.parentCode != null">
                parent_code,
            </if>
            <if test="bean.deptCode != null">
                dept_code,
            </if>
            <if test="bean.deptLevel != null">
                dept_level,
            </if>
            <if test="bean.deptType != null">
                dept_type,
            </if>
            <if test="bean.deptName != null">
                dept_name,
            </if>
            <if test="bean.createTime != null">
                create_time,
            </if>
            <if test="bean.createBy != null">
                create_by,
            </if>
            <if test="bean.updateTime != null">
                update_time,
            </if>
            <if test="bean.updateBy != null">
                update_by,
            </if>
            <if test="bean.remark != null">
                remark,
            </if>
            <if test="bean.sort != null">
                sort,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bean.id != null">
                #{bean.id},
            </if>
            <if test="bean.parentCode != null">
                #{bean.parentCode},
            </if>
            <if test="bean.deptCode != null">
                #{bean.deptCode},
            </if>
            <if test="bean.deptLevel != null">
                #{bean.deptLevel},
            </if>
            <if test="bean.deptType != null">
                #{bean.deptType},
            </if>
            <if test="bean.deptName != null">
                #{bean.deptName},
            </if>
            <if test="bean.createTime != null">
                #{bean.createTime},
            </if>
            <if test="bean.createBy != null">
                #{bean.createBy},
            </if>
            <if test="bean.updateTime != null">
                #{bean.updateTime},
            </if>
            <if test="bean.updateBy != null">
                #{bean.updateBy},
            </if>
            <if test="bean.remark != null">
                #{bean.remark},
            </if>
            <if test="bean.sort != null">
                #{bean.sort},
            </if>
        </trim>
        on DUPLICATE key update
        <trim prefix="" suffix="" suffixOverrides=",">
            <if test="bean.parentCode != null">
                parent_code= VALUES(parent_code),
            </if>
            <if test="bean.deptCode != null">
                dept_code= VALUES(dept_code),
            </if>
            <if test="bean.deptLevel != null">
                dept_level= VALUES(dept_level),
            </if>
            <if test="bean.deptType != null">
                dept_type= VALUES(dept_type),
            </if>
            <if test="bean.deptName != null">
                dept_name= VALUES(dept_name),
            </if>
            <if test="bean.createTime != null">
                create_time= VALUES(create_time),
            </if>
            <if test="bean.createBy != null">
                create_by= VALUES(create_by),
            </if>
            <if test="bean.updateTime != null">
                update_time= VALUES(update_time),
            </if>
            <if test="bean.updateBy != null">
                update_by= VALUES(update_by),
            </if>
            <if test="bean.remark != null">
                remark= VALUES(remark),
            </if>
            <if test="bean.sort != null">
                sort= VALUES(sort),
            </if>
        </trim>
    </insert>

    <!--添加（批量插入）-->
    <insert id="insertBatch" parameterType="com.jl.project.entity.po.Department">
        INSERT INTO
        department(id,parent_code,dept_code,dept_level,dept_type,dept_name,create_time,create_by,update_time,update_by,remark,sort)values
        <foreach collection="list" item="item" separator=",">
            (#{item.id},#{item.parentCode},#{item.deptCode},#{item.deptLevel},#{item.deptType},#{item.deptName},#{item.createTime},#{item.createBy},#{item.updateTime},#{item.updateBy},#{item.remark},#{item.sort})
        </foreach>
    </insert>

    <!--批量插入或更新-->
    <insert id="insertOrUpdateBatch" parameterType="com.jl.project.entity.po.Department">
        INSERT INTO
        department(id,parent_code,dept_code,dept_level,dept_type,dept_name,create_time,create_by,update_time,update_by,remark,sort)values
        <foreach collection="list" item="item" separator=",">
            (#{item.id},#{item.parentCode},#{item.deptCode},#{item.deptLevel},#{item.deptType},#{item.deptName},#{item.createTime},#{item.createBy},#{item.updateTime},#{item.updateBy},#{item.remark},#{item.sort})
        </foreach>
        on DUPLICATE key update id= VALUES(id),parent_code= VALUES(parent_code),dept_code= VALUES(dept_code),dept_level=
        VALUES(dept_level),dept_type= VALUES(dept_type),dept_name= VALUES(dept_name),create_time=
        VALUES(create_time),create_by= VALUES(create_by),update_time= VALUES(update_time),update_by=
        VALUES(update_by),remark= VALUES(remark),sort= VALUES(sort)
    </insert>


    <!--根据Id查询-->
    <select id="selectById" resultMap="base_result_map">
        select
        <include refid="base_column_list"/>
        from department where id=#{id}
    </select>

    <!--根据Id更新-->
    <update id="updateById" parameterType="com.jl.project.entity.po.Department">
        update department
        <set>
            <if test="bean.id != null">
                id = #{bean.id},
            </if>
            <if test="bean.parentCode != null">
                parent_code = #{bean.parentCode},
            </if>
            <if test="bean.deptCode != null">
                dept_code = #{bean.deptCode},
            </if>
            <if test="bean.deptLevel != null">
                dept_level = #{bean.deptLevel},
            </if>
            <if test="bean.deptType != null">
                dept_type = #{bean.deptType},
            </if>
            <if test="bean.deptName != null">
                dept_name = #{bean.deptName},
            </if>
            <if test="bean.createTime != null">
                create_time = #{bean.createTime},
            </if>
            <if test="bean.createBy != null">
                create_by = #{bean.createBy},
            </if>
            <if test="bean.updateTime != null">
                update_time = #{bean.updateTime},
            </if>
            <if test="bean.updateBy != null">
                update_by = #{bean.updateBy},
            </if>
            <if test="bean.remark != null">
                remark = #{bean.remark},
            </if>
            <if test="bean.sort != null">
                sort = #{bean.sort},
            </if>
        </set>
        where id=#{id}
    </update>

    <!--根据Id删除-->
    <delete id="deleteById">
        delete
        from department
        where id = #{id}
    </delete>

    <!-- 获取当前层级的部门序号列表 -->
    <select id="getCurrentLevelNumList" resultType="com.jl.project.entity.po.Department">
        SELECT *
        FROM `department`
        WHERE dept_code LIKE CONCAT(#{parentCode}, '%')  AND LENGTH(dept_code) = #{length}
    </select>


</mapper>

